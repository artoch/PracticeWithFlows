plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id "androidx.navigation.safeargs.kotlin"
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.2"

    defaultConfig {
        applicationId "com.testbozz.testbozz"
        minSdkVersion 16
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"
        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"



            javaCompileOptions {
                annotationProcessorOptions {
                    arguments += ["room.schemaLocation": "$projectDir/schemas".toString()]
                }
            }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    buildFeatures {
        viewBinding true
    }
}

dependencies {

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.6.0'
    implementation 'androidx.appcompat:appcompat:1.3.0'
    implementation 'com.google.android.material:material:1.3.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    //Material DSGN
    implementation 'com.google.android.material:material:1.3.0'
    //ViewModel
    def lifecycle_version = "2.3.0"



    implementation 'com.github.florent37:inline-activity-result-kotlin:1.0.4'
    implementation "android.arch.lifecycle:extensions:1.1.1"
    kapt "android.arch.lifecycle:compiler:1.1.1"
    // ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    // LiveData
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    // Lifecycles only (without ViewModel or LiveData)
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"

    // Saved state module for ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycle_version"

    // Annotation processor
    //  kapt "androidx.lifecycle:lifecycle-compiler:$lifecycle_version"
    // alternately - if using Java8, use the following instead of lifecycle-compiler
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"

    implementation "androidx.lifecycle:lifecycle-extensions:2.2.0"

    //Retrofit 2
    def retrofit = "2.9.0"
    implementation "com.squareup.retrofit2:retrofit:$retrofit"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit"
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.5.0'

    //Coroutines
    def coroutines = "1.5.0"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines"

    //Glide
    implementation 'com.github.bumptech.glide:glide:4.11.0'
    kapt 'com.github.bumptech.glide:compiler:4.11.0'

    //Paging
    def paging_version = "2.1.2"

    implementation "androidx.paging:paging-runtime-ktx:$paging_version" // For Kotlin use paging-runtime-ktx

    // alternatively - without Android dependencies for testing
    testImplementation "androidx.paging:paging-common-ktx:$paging_version" // For Kotlin use paging-common-ktx

    // optional - RxJava support
    implementation "androidx.paging:paging-rxjava2-ktx:$paging_version" // For Kotlin use paging-rxjava2-ktx

    //Interceptores
    implementation("com.squareup.okhttp3:logging-interceptor:4.7.2")
    implementation 'com.squareup.okhttp3:okhttp:4.7.2'
    implementation "com.squareup.okhttp3:okhttp-urlconnection:4.2.1"
    implementation 'androidx.cardview:cardview:1.0.0'


    //Dagger Hilt
    def daggerHilt = "2.34-beta"
    implementation "com.google.dagger:hilt-android:$daggerHilt"
    kapt "com.google.dagger:hilt-compiler:$daggerHilt"



    //Para guardar instancia del recyclerview.
    def prefrv = "1.1.1"
    implementation "androidx.preference:preference-ktx:$prefrv"

    // room
    def room = "2.2.5"
    implementation "androidx.room:room-runtime:$room"
    kapt "androidx.room:room-compiler:$room"
    implementation "androidx.room:room-ktx:$room"

    // viewpager2
    implementation 'androidx.viewpager2:viewpager2:1.1.0-alpha01'

    //Permisos Dexter
    implementation 'com.karumi:dexter:6.2.1'


    //https://github.com/apptik/MultiSlider
    implementation 'io.apptik.widget:multislider:1.3'


    //https://github.com/airbnb/lottie-android
    implementation "com.airbnb.android:lottie:3.4.2"

    implementation 'androidx.navigation:navigation-fragment-ktx:2.3.5'

}

kapt {
    correctErrorTypes true
    javacOptions {
        // These options are normally set automatically via the Hilt Gradle plugin, but we
        // set them manually to workaround a bug in the Kotlin 1.5.20
        option("-Adagger.fastInit=ENABLED")
        option("-Adagger.hilt.android.internal.disableAndroidSuperclassValidation=true")
    }
}